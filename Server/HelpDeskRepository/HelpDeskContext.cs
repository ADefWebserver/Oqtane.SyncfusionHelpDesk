// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.AspNetCore.Http;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Oqtane.Modules;
using Oqtane.Repository;

namespace Syncfusion.HelpDesk.Server.HelpDeskRepository
{
    public partial class HelpDeskContext : DBContextBase, IService
    {
        public HelpDeskContext(ITenantResolver tenantResolver, IHttpContextAccessor accessor) : base(tenantResolver, accessor)
        {
            // ContextBase handles multi-tenant database connections
        }

        public virtual DbSet<SyncfusionHelpDeskTicketDetails> SyncfusionHelpDeskTicketDetails { get; set; }
        public virtual DbSet<SyncfusionHelpDeskTickets> SyncfusionHelpDeskTickets { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<SyncfusionHelpDeskTicketDetails>(entity =>
            {
                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedBy)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.TicketDescription).IsRequired();

                entity.Property(e => e.TicketDetailDate).HasColumnType("datetime");

                entity.HasOne(d => d.HelpDeskTicket)
                    .WithMany(p => p.SyncfusionHelpDeskTicketDetails)
                    .HasForeignKey(d => d.HelpDeskTicketId)
                    .HasConstraintName("FK_SyncfusionHelpDeskTicketDetails_SyncfusionHelpDeskTickets");
            });

            modelBuilder.Entity<SyncfusionHelpDeskTickets>(entity =>
            {
                entity.Property(e => e.CreatedBy)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.CreatedOn).HasColumnType("datetime");

                entity.Property(e => e.ModifiedBy)
                    .IsRequired()
                    .HasMaxLength(256);

                entity.Property(e => e.ModifiedOn).HasColumnType("datetime");

                entity.Property(e => e.TicketDate).HasColumnType("datetime");

                entity.Property(e => e.TicketDescription).IsRequired();

                entity.Property(e => e.TicketStatus)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}